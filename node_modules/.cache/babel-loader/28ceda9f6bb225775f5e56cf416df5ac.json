{"ast":null,"code":"import _ol_asserts_ from '../asserts.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_style_Circle_ from '../style/circle.js';\nimport _ol_style_Fill_ from '../style/fill.js';\nimport _ol_style_Stroke_ from '../style/stroke.js';\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {olx.style.StyleOptions=} opt_options Style options.\n * @api\n */\n\nvar _ol_style_Style_ = function (opt_options) {\n  var options = opt_options || {};\n  /**\n   * @private\n   * @type {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n   */\n\n  this.geometry_ = null;\n  /**\n   * @private\n   * @type {!ol.StyleGeometryFunction}\n   */\n\n  this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n\n\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n  /**\n   * @private\n   * @type {ol.style.Image}\n   */\n\n  this.image_ = options.image !== undefined ? options.image : null;\n  /**\n   * @private\n   * @type {ol.StyleRenderFunction|null}\n   */\n\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n  /**\n   * @private\n   * @type {ol.style.Text}\n   */\n\n  this.text_ = options.text !== undefined ? options.text : null;\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n\n  this.zIndex_ = options.zIndex;\n};\n/**\n * Clones the style.\n * @return {ol.style.Style} The cloned style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.clone = function () {\n  var geometry = this.getGeometry();\n\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n\n  return new _ol_style_Style_({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {ol.StyleRenderFunction|null} Custom renderer function.\n * @api\n */\n\n\n_ol_style_Style_.prototype.getRenderer = function () {\n  return this.renderer_;\n};\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {ol.StyleRenderFunction|null} renderer Custom renderer function.\n * @api\n */\n\n\n_ol_style_Style_.prototype.setRenderer = function (renderer) {\n  this.renderer_ = renderer;\n};\n/**\n * Get the geometry to be rendered.\n * @return {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.getGeometry = function () {\n  return this.geometry_;\n};\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!ol.StyleGeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\n\n\n_ol_style_Style_.prototype.getGeometryFunction = function () {\n  return this.geometryFunction_;\n};\n/**\n * Get the fill style.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.getFill = function () {\n  return this.fill_;\n};\n/**\n * Set the fill style.\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.setFill = function (fill) {\n  this.fill_ = fill;\n};\n/**\n * Get the image style.\n * @return {ol.style.Image} Image style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.getImage = function () {\n  return this.image_;\n};\n/**\n * Set the image style.\n * @param {ol.style.Image} image Image style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.setImage = function (image) {\n  this.image_ = image;\n};\n/**\n * Get the stroke style.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.getStroke = function () {\n  return this.stroke_;\n};\n/**\n * Set the stroke style.\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.setStroke = function (stroke) {\n  this.stroke_ = stroke;\n};\n/**\n * Get the text style.\n * @return {ol.style.Text} Text style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.getText = function () {\n  return this.text_;\n};\n/**\n * Set the text style.\n * @param {ol.style.Text} text Text style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.setText = function (text) {\n  this.text_ = text;\n};\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\n\n\n_ol_style_Style_.prototype.getZIndex = function () {\n  return this.zIndex_;\n};\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|ol.geom.Geometry|ol.StyleGeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\n\n\n_ol_style_Style_.prototype.setGeometry = function (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function (feature) {\n      return (\n        /** @type {ol.geom.Geometry} */\n        feature.get(geometry)\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function () {\n      return (\n        /** @type {ol.geom.Geometry} */\n        geometry\n      );\n    };\n  }\n\n  this.geometry_ = geometry;\n};\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\n\n\n_ol_style_Style_.prototype.setZIndex = function (zIndex) {\n  this.zIndex_ = zIndex;\n};\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of ol.style.Style or single style objects wrapped in a\n * new style function.\n * @param {ol.StyleFunction|Array.<ol.style.Style>|ol.style.Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {ol.StyleFunction} A style function.\n */\n\n\n_ol_style_Style_.createFunction = function (obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<ol.style.Style>}\n     */\n    var styles;\n\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      _ol_asserts_.assert(obj instanceof _ol_style_Style_, 41); // Expected an `ol.style.Style` or an array of `ol.style.Style`\n\n\n      styles = [obj];\n    }\n\n    styleFunction = function () {\n      return styles;\n    };\n  }\n\n  return styleFunction;\n};\n/**\n * @type {Array.<ol.style.Style>}\n * @private\n */\n\n\n_ol_style_Style_.default_ = null;\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>} Style.\n */\n\n_ol_style_Style_.defaultFunction = function (feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (ol.style.Circle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!_ol_style_Style_.default_) {\n    var fill = new _ol_style_Fill_({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new _ol_style_Stroke_({\n      color: '#3399CC',\n      width: 1.25\n    });\n    _ol_style_Style_.default_ = [new _ol_style_Style_({\n      image: new _ol_style_Circle_({\n        fill: fill,\n        stroke: stroke,\n        radius: 5\n      }),\n      fill: fill,\n      stroke: stroke\n    })];\n  }\n\n  return _ol_style_Style_.default_;\n};\n/**\n * Default styles for editing features.\n * @return {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} Styles\n */\n\n\n_ol_style_Style_.createDefaultEditing = function () {\n  /** @type {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[_ol_geom_GeometryType_.POLYGON] = [new _ol_style_Style_({\n    fill: new _ol_style_Fill_({\n      color: [255, 255, 255, 0.5]\n    })\n  })];\n  styles[_ol_geom_GeometryType_.MULTI_POLYGON] = styles[_ol_geom_GeometryType_.POLYGON];\n  styles[_ol_geom_GeometryType_.LINE_STRING] = [new _ol_style_Style_({\n    stroke: new _ol_style_Stroke_({\n      color: white,\n      width: width + 2\n    })\n  }), new _ol_style_Style_({\n    stroke: new _ol_style_Stroke_({\n      color: blue,\n      width: width\n    })\n  })];\n  styles[_ol_geom_GeometryType_.MULTI_LINE_STRING] = styles[_ol_geom_GeometryType_.LINE_STRING];\n  styles[_ol_geom_GeometryType_.CIRCLE] = styles[_ol_geom_GeometryType_.POLYGON].concat(styles[_ol_geom_GeometryType_.LINE_STRING]);\n  styles[_ol_geom_GeometryType_.POINT] = [new _ol_style_Style_({\n    image: new _ol_style_Circle_({\n      radius: width * 2,\n      fill: new _ol_style_Fill_({\n        color: blue\n      }),\n      stroke: new _ol_style_Stroke_({\n        color: white,\n        width: width / 2\n      })\n    }),\n    zIndex: Infinity\n  })];\n  styles[_ol_geom_GeometryType_.MULTI_POINT] = styles[_ol_geom_GeometryType_.POINT];\n  styles[_ol_geom_GeometryType_.GEOMETRY_COLLECTION] = styles[_ol_geom_GeometryType_.POLYGON].concat(styles[_ol_geom_GeometryType_.LINE_STRING], styles[_ol_geom_GeometryType_.POINT]);\n  return styles;\n};\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature to get the geometry\n *     for.\n * @return {ol.geom.Geometry|ol.render.Feature|undefined} Geometry to render.\n */\n\n\n_ol_style_Style_.defaultGeometryFunction = function (feature) {\n  return feature.getGeometry();\n};\n\nexport default _ol_style_Style_;","map":{"version":3,"sources":["/Users/jo/Dev/public/hackzurich-2020-map/map/node_modules/ol/style/style.js"],"names":["_ol_asserts_","_ol_geom_GeometryType_","_ol_style_Circle_","_ol_style_Fill_","_ol_style_Stroke_","_ol_style_Style_","opt_options","options","geometry_","geometryFunction_","defaultGeometryFunction","geometry","undefined","setGeometry","fill_","fill","image_","image","renderer_","renderer","stroke_","stroke","text_","text","zIndex_","zIndex","prototype","clone","getGeometry","getFill","getImage","getStroke","getText","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","get","setZIndex","createFunction","obj","styleFunction","styles","Array","isArray","assert","default_","defaultFunction","resolution","color","width","radius","createDefaultEditing","white","blue","POLYGON","MULTI_POLYGON","LINE_STRING","MULTI_LINE_STRING","CIRCLE","concat","POINT","Infinity","MULTI_POINT","GEOMETRY_COLLECTION"],"mappings":"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","sourcesContent":["import _ol_asserts_ from '../asserts.js';\nimport _ol_geom_GeometryType_ from '../geom/geometrytype.js';\nimport _ol_style_Circle_ from '../style/circle.js';\nimport _ol_style_Fill_ from '../style/fill.js';\nimport _ol_style_Stroke_ from '../style/stroke.js';\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {olx.style.StyleOptions=} opt_options Style options.\n * @api\n */\nvar _ol_style_Style_ = function(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!ol.StyleGeometryFunction}\n   */\n  this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {ol.style.Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {ol.style.Image}\n   */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {ol.StyleRenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {ol.style.Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {ol.style.Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {ol.style.Style} The cloned style.\n * @api\n */\n_ol_style_Style_.prototype.clone = function() {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new _ol_style_Style_({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {ol.StyleRenderFunction|null} Custom renderer function.\n * @api\n */\n_ol_style_Style_.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {ol.StyleRenderFunction|null} renderer Custom renderer function.\n * @api\n */\n_ol_style_Style_.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|ol.geom.Geometry|ol.StyleGeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\n_ol_style_Style_.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!ol.StyleGeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\n_ol_style_Style_.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {ol.style.Fill} Fill style.\n * @api\n */\n_ol_style_Style_.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {ol.style.Fill} fill Fill style.\n * @api\n */\n_ol_style_Style_.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {ol.style.Image} Image style.\n * @api\n */\n_ol_style_Style_.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {ol.style.Image} image Image style.\n * @api\n */\n_ol_style_Style_.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {ol.style.Stroke} Stroke style.\n * @api\n */\n_ol_style_Style_.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {ol.style.Stroke} stroke Stroke style.\n * @api\n */\n_ol_style_Style_.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {ol.style.Text} Text style.\n * @api\n */\n_ol_style_Style_.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {ol.style.Text} text Text style.\n * @api\n */\n_ol_style_Style_.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\n_ol_style_Style_.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|ol.geom.Geometry|ol.StyleGeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\n_ol_style_Style_.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return /** @type {ol.geom.Geometry} */ (feature.get(geometry));\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = _ol_style_Style_.defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return /** @type {ol.geom.Geometry} */ (geometry);\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\n_ol_style_Style_.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of ol.style.Style or single style objects wrapped in a\n * new style function.\n * @param {ol.StyleFunction|Array.<ol.style.Style>|ol.style.Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {ol.StyleFunction} A style function.\n */\n_ol_style_Style_.createFunction = function(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<ol.style.Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      _ol_asserts_.assert(obj instanceof _ol_style_Style_,\n          41); // Expected an `ol.style.Style` or an array of `ol.style.Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n};\n\n\n/**\n * @type {Array.<ol.style.Style>}\n * @private\n */\n_ol_style_Style_.default_ = null;\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>} Style.\n */\n_ol_style_Style_.defaultFunction = function(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (ol.style.Circle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!_ol_style_Style_.default_) {\n    var fill = new _ol_style_Fill_({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new _ol_style_Stroke_({\n      color: '#3399CC',\n      width: 1.25\n    });\n    _ol_style_Style_.default_ = [\n      new _ol_style_Style_({\n        image: new _ol_style_Circle_({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return _ol_style_Style_.default_;\n};\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} Styles\n */\n_ol_style_Style_.createDefaultEditing = function() {\n  /** @type {Object.<ol.geom.GeometryType, Array.<ol.style.Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[_ol_geom_GeometryType_.POLYGON] = [\n    new _ol_style_Style_({\n      fill: new _ol_style_Fill_({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_POLYGON] =\n      styles[_ol_geom_GeometryType_.POLYGON];\n\n  styles[_ol_geom_GeometryType_.LINE_STRING] = [\n    new _ol_style_Style_({\n      stroke: new _ol_style_Stroke_({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new _ol_style_Style_({\n      stroke: new _ol_style_Stroke_({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_LINE_STRING] =\n      styles[_ol_geom_GeometryType_.LINE_STRING];\n\n  styles[_ol_geom_GeometryType_.CIRCLE] =\n      styles[_ol_geom_GeometryType_.POLYGON].concat(\n          styles[_ol_geom_GeometryType_.LINE_STRING]\n      );\n\n\n  styles[_ol_geom_GeometryType_.POINT] = [\n    new _ol_style_Style_({\n      image: new _ol_style_Circle_({\n        radius: width * 2,\n        fill: new _ol_style_Fill_({\n          color: blue\n        }),\n        stroke: new _ol_style_Stroke_({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[_ol_geom_GeometryType_.MULTI_POINT] =\n      styles[_ol_geom_GeometryType_.POINT];\n\n  styles[_ol_geom_GeometryType_.GEOMETRY_COLLECTION] =\n      styles[_ol_geom_GeometryType_.POLYGON].concat(\n          styles[_ol_geom_GeometryType_.LINE_STRING],\n          styles[_ol_geom_GeometryType_.POINT]\n      );\n\n  return styles;\n};\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {ol.Feature|ol.render.Feature} feature Feature to get the geometry\n *     for.\n * @return {ol.geom.Geometry|ol.render.Feature|undefined} Geometry to render.\n */\n_ol_style_Style_.defaultGeometryFunction = function(feature) {\n  return feature.getGeometry();\n};\nexport default _ol_style_Style_;\n"]},"metadata":{},"sourceType":"module"}