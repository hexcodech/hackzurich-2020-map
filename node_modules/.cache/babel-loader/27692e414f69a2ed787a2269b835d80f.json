{"ast":null,"code":"var _jsxFileName = \"/Users/jo/Dev/public/hackzurich-2020-map/map/src/map.jsx\";\nimport React, { Component } from \"react\";\nimport OlMap from \"ol/map\";\nimport OlView from \"ol/view\";\nimport OlLayerTile from \"ol/layer/tile\";\nimport Feature from \"ol/index\";\nimport OlSourceOSM from \"ol/source/osm\";\nimport { Vector as VectorSource } from \"ol/source\";\nimport { Vector as VectorLayer } from 'ol/layer';\nimport { Point } from 'ol/geom';\nimport { Fill, Style } from 'ol/style';\nimport { useGeographic } from 'ol/proj';\nuseGeographic();\n\nclass CustomMap extends Component {\n  constructor(props) {\n    super(props);\n    let place = [-110, 45];\n    let point = new Point(place);\n    this.state = {\n      center: [0, 0],\n      zoom: 1\n    };\n    this.olmap = new OlMap({\n      target: null,\n      layers: [new OlLayerTile({\n        source: new OlSourceOSM()\n      }), new VectorLayer({\n        source: new VectorSource({\n          features: [new Feature(point)]\n        }),\n        style: new Style({\n          image: new Circle({\n            radius: 9,\n            fill: new Fill({\n              color: 'red'\n            })\n          })\n        })\n      })],\n      view: new OlView({\n        center: [0, 0],\n        zoom: 1\n      })\n    });\n  }\n\n  componentDidMount() {\n    this.olmap.setTarget(\"map\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default CustomMap; // import React from 'react';\n// import './index.css';\n// import Map from 'ol/Map';\n// import View from 'ol/View';\n// import TileLayer from 'ol/layer/Tile';\n// import XYZ from 'ol/source/XYZ';\n// class CustomMap extends React.Component {\n// \trender() {\n// \t\tnew Map({\n// \t\t\ttarget: 'map',\n// \t\t\tlayers: [\n// \t\t\t\tnew TileLayer({\n// \t\t\t\tsource: new XYZ({\n// \t\t\t\t\turl:\n// \t\t\t\t\t\t'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png' +\n// \t\t\t\t\t\t'?apikey=Your API key from http://www.thunderforest.com/docs/apikeys/ here',\n// \t\t\t\t})\n// \t\t\t})\n// \t\t\t\t// \tsource: new XYZ({\n// \t\t\t\t// \t\turl: 'ch.swisstopo.swisstlm3d-karte-farbe'\n// \t\t\t\t// \t})\n// \t\t\t\t// })\n// \t\t\t],\n// \t\t\tview: new View({\n// \t\t\t\tcenter: [-472202, 7530279],\n// \t\t\t\tzoom: 12\n// \t\t\t})\n// \t\t});\n// \t\treturn (\n// \t\t\t<div id=\"map\" className=\"map\">\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n// export default CustomMap;","map":{"version":3,"sources":["/Users/jo/Dev/public/hackzurich-2020-map/map/src/map.jsx"],"names":["React","Component","OlMap","OlView","OlLayerTile","Feature","OlSourceOSM","Vector","VectorSource","VectorLayer","Point","Fill","Style","useGeographic","CustomMap","constructor","props","place","point","state","center","zoom","olmap","target","layers","source","features","style","image","Circle","radius","fill","color","view","componentDidMount","setTarget","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,MAAM,IAAIC,YAAlB,QAAqC,WAArC;AACA,SAAQD,MAAM,IAAIE,WAAlB,QAAoC,UAApC;AACA,SAAQC,KAAR,QAAoB,SAApB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,UAA1B;AACA,SAAQC,aAAR,QAA4B,SAA5B;AAEAA,aAAa;;AAEb,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAChCc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AAEA,QAAIC,KAAK,GAAG,CAAC,CAAC,GAAF,EAAO,EAAP,CAAZ;AACA,QAAIC,KAAK,GAAG,IAAIR,KAAJ,CAAUO,KAAV,CAAZ;AAEA,SAAKE,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAV;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAb;AAEE,SAAKC,KAAL,GAAa,IAAIpB,KAAJ,CAAU;AACrBqB,MAAAA,MAAM,EAAE,IADa;AAErBC,MAAAA,MAAM,EAAE,CACN,IAAIpB,WAAJ,CAAgB;AACdqB,QAAAA,MAAM,EAAE,IAAInB,WAAJ;AADM,OAAhB,CADM,EAIV,IAAIG,WAAJ,CAAgB;AACfgB,QAAAA,MAAM,EAAE,IAAIjB,YAAJ,CAAiB;AACxBkB,UAAAA,QAAQ,EAAE,CAAC,IAAIrB,OAAJ,CAAYa,KAAZ,CAAD;AADc,SAAjB,CADO;AAIfS,QAAAA,KAAK,EAAE,IAAIf,KAAJ,CAAU;AAChBgB,UAAAA,KAAK,EAAE,IAAIC,MAAJ,CAAW;AACjBC,YAAAA,MAAM,EAAE,CADS;AAEjBC,YAAAA,IAAI,EAAE,IAAIpB,IAAJ,CAAS;AAACqB,cAAAA,KAAK,EAAE;AAAR,aAAT;AAFW,WAAX;AADS,SAAV;AAJQ,OAAhB,CAJU,CAFa;AAkBrBC,MAAAA,IAAI,EAAE,IAAI9B,MAAJ,CAAW;AACfiB,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAG,CAAH,CADO;AAEfC,QAAAA,IAAI,EAAE;AAFS,OAAX;AAlBe,KAAV,CAAb;AAuBD;;AAEDa,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,KAAL,CAAWa,SAAX,CAAqB,KAArB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA1C+B;;AA6ClC,eAAetB,SAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport OlMap from \"ol/map\";\nimport OlView from \"ol/view\";\nimport OlLayerTile from \"ol/layer/tile\";\nimport Feature from \"ol/index\";\nimport OlSourceOSM from \"ol/source/osm\";\nimport {Vector as VectorSource} from \"ol/source\";\nimport {Vector as VectorLayer} from 'ol/layer';\nimport {Point} from 'ol/geom';\nimport {Fill, Style} from 'ol/style';\nimport {useGeographic} from 'ol/proj';\n\nuseGeographic();\n\nclass CustomMap extends Component {\n  constructor(props) {\n\t\tsuper(props);\n\n\t\tlet place = [-110, 45];\n\t\tlet point = new Point(place);\n\n\t\tthis.state = { center: [0, 0], zoom: 1 };\n\n    this.olmap = new OlMap({\n      target: null,\n      layers: [\n        new OlLayerTile({\n          source: new OlSourceOSM()\n\t\t\t\t}),\n\t\t\t\tnew VectorLayer({\n\t\t\t\t\tsource: new VectorSource({\n\t\t\t\t\t\tfeatures: [new Feature(point)],\n\t\t\t\t\t}),\n\t\t\t\t\tstyle: new Style({\n\t\t\t\t\t\timage: new Circle({\n\t\t\t\t\t\t\tradius: 9,\n\t\t\t\t\t\t\tfill: new Fill({color: 'red'}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t})\n      ],\n      view: new OlView({\n        center: [0,0],\n        zoom: 1\n      })\n    });\n  }\n\n  componentDidMount() {\n    this.olmap.setTarget(\"map\");\n  }\n\n  render() {\n    return (\n      <div id=\"map\"></div>\n    );\n  }\n}\n\nexport default CustomMap;\n\n// import React from 'react';\n// import './index.css';\n\n// import Map from 'ol/Map';\n// import View from 'ol/View';\n// import TileLayer from 'ol/layer/Tile';\n// import XYZ from 'ol/source/XYZ';\n\n// class CustomMap extends React.Component {\n// \trender() {\n// \t\tnew Map({\n// \t\t\ttarget: 'map',\n// \t\t\tlayers: [\n// \t\t\t\tnew TileLayer({\n// \t\t\t\tsource: new XYZ({\n// \t\t\t\t\turl:\n// \t\t\t\t\t\t'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png' +\n// \t\t\t\t\t\t'?apikey=Your API key from http://www.thunderforest.com/docs/apikeys/ here',\n// \t\t\t\t})\n// \t\t\t})\n// \t\t\t\t// \tsource: new XYZ({\n// \t\t\t\t// \t\turl: 'ch.swisstopo.swisstlm3d-karte-farbe'\n// \t\t\t\t// \t})\n// \t\t\t\t// })\n// \t\t\t],\n// \t\t\tview: new View({\n// \t\t\t\tcenter: [-472202, 7530279],\n// \t\t\t\tzoom: 12\n// \t\t\t})\n// \t\t});\n\n// \t\treturn (\n// \t\t\t<div id=\"map\" className=\"map\">\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\n// export default CustomMap;"]},"metadata":{},"sourceType":"module"}